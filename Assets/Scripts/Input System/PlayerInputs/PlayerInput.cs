//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.6.3
//     from Assets/Scripts/Input System/PlayerInputs/PlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInput: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInput"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""46b4d38f-0bd1-4022-9229-3b3d9f39b201"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""5d87a1ed-ab59-47a3-abf2-43a249a963c3"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ShootPress"",
                    ""type"": ""Button"",
                    ""id"": ""956383a5-1cdc-48e0-b77f-6a8ad435c579"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ShootNotPress"",
                    ""type"": ""Button"",
                    ""id"": ""e2e19c56-7304-446f-ac75-2507e78390ed"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=1)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""cf55436d-9e00-4432-ab16-6740e808b6dd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""068f1412-d21e-452f-9c13-1bfbb7b377dc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Slower"",
                    ""type"": ""Button"",
                    ""id"": ""7f5c21c3-577c-4704-b651-e015b0555e3c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Laser"",
                    ""type"": ""Button"",
                    ""id"": ""1285d931-dfc8-4390-bf64-c07e3755cf58"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MousePosition"",
                    ""type"": ""Value"",
                    ""id"": ""413e1975-1305-4f84-9ba0-fc3dac8d3e4e"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CameraDragPress"",
                    ""type"": ""Button"",
                    ""id"": ""a4aaf80f-1d5c-4d25-8dd0-bfb49a42e8ab"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CameraDragNotPress"",
                    ""type"": ""Button"",
                    ""id"": ""62981984-cbc3-420e-93ee-dfff6f31006e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=1)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CameraPos"",
                    ""type"": ""Value"",
                    ""id"": ""a91fc398-ca27-4cb6-a556-cbd4a4bef3b3"",
                    ""expectedControlType"": ""Delta"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""d786f7d7-7148-4209-bdf7-d491779a2491"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""797695a7-346d-4879-84b4-e0727b29e9fb"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""f32c51ab-6995-4fab-a349-e8543e8706fc"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""46e2df9f-152e-4eb0-b58e-dc8998e3df6f"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""3e4334fb-71cb-4c3d-93ae-48170389e5e3"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""ea2d56bd-f7a0-48b1-b300-f08cd80fc0fc"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ShootPress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""72794627-acdf-4979-8fa4-f6e02a4b08f2"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""75484efb-cfc8-4399-a6de-270d765a1cb2"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""05685636-8b76-43ba-a679-5d971507ba25"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Slower"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3256ea50-4312-4c8f-a9a0-bd352ed3b2df"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Laser"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1ce1704b-f5e2-4cde-8e5b-3a922a86212d"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ShootNotPress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""45d53837-5b1d-4061-aa62-571d67c3613a"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MousePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eb2c7f4f-e817-479e-9de2-4be529f74498"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraDragPress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""09658738-5fac-4a6a-9d3a-828491e452e5"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraDragNotPress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8ad5a30b-f2d1-4193-8760-fa17f6314955"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraPos"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Move = m_Player.FindAction("Move", throwIfNotFound: true);
        m_Player_ShootPress = m_Player.FindAction("ShootPress", throwIfNotFound: true);
        m_Player_ShootNotPress = m_Player.FindAction("ShootNotPress", throwIfNotFound: true);
        m_Player_Interact = m_Player.FindAction("Interact", throwIfNotFound: true);
        m_Player_Dash = m_Player.FindAction("Dash", throwIfNotFound: true);
        m_Player_Slower = m_Player.FindAction("Slower", throwIfNotFound: true);
        m_Player_Laser = m_Player.FindAction("Laser", throwIfNotFound: true);
        m_Player_MousePosition = m_Player.FindAction("MousePosition", throwIfNotFound: true);
        m_Player_CameraDragPress = m_Player.FindAction("CameraDragPress", throwIfNotFound: true);
        m_Player_CameraDragNotPress = m_Player.FindAction("CameraDragNotPress", throwIfNotFound: true);
        m_Player_CameraPos = m_Player.FindAction("CameraPos", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_Move;
    private readonly InputAction m_Player_ShootPress;
    private readonly InputAction m_Player_ShootNotPress;
    private readonly InputAction m_Player_Interact;
    private readonly InputAction m_Player_Dash;
    private readonly InputAction m_Player_Slower;
    private readonly InputAction m_Player_Laser;
    private readonly InputAction m_Player_MousePosition;
    private readonly InputAction m_Player_CameraDragPress;
    private readonly InputAction m_Player_CameraDragNotPress;
    private readonly InputAction m_Player_CameraPos;
    public struct PlayerActions
    {
        private @PlayerInput m_Wrapper;
        public PlayerActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Player_Move;
        public InputAction @ShootPress => m_Wrapper.m_Player_ShootPress;
        public InputAction @ShootNotPress => m_Wrapper.m_Player_ShootNotPress;
        public InputAction @Interact => m_Wrapper.m_Player_Interact;
        public InputAction @Dash => m_Wrapper.m_Player_Dash;
        public InputAction @Slower => m_Wrapper.m_Player_Slower;
        public InputAction @Laser => m_Wrapper.m_Player_Laser;
        public InputAction @MousePosition => m_Wrapper.m_Player_MousePosition;
        public InputAction @CameraDragPress => m_Wrapper.m_Player_CameraDragPress;
        public InputAction @CameraDragNotPress => m_Wrapper.m_Player_CameraDragNotPress;
        public InputAction @CameraPos => m_Wrapper.m_Player_CameraPos;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @ShootPress.started += instance.OnShootPress;
            @ShootPress.performed += instance.OnShootPress;
            @ShootPress.canceled += instance.OnShootPress;
            @ShootNotPress.started += instance.OnShootNotPress;
            @ShootNotPress.performed += instance.OnShootNotPress;
            @ShootNotPress.canceled += instance.OnShootNotPress;
            @Interact.started += instance.OnInteract;
            @Interact.performed += instance.OnInteract;
            @Interact.canceled += instance.OnInteract;
            @Dash.started += instance.OnDash;
            @Dash.performed += instance.OnDash;
            @Dash.canceled += instance.OnDash;
            @Slower.started += instance.OnSlower;
            @Slower.performed += instance.OnSlower;
            @Slower.canceled += instance.OnSlower;
            @Laser.started += instance.OnLaser;
            @Laser.performed += instance.OnLaser;
            @Laser.canceled += instance.OnLaser;
            @MousePosition.started += instance.OnMousePosition;
            @MousePosition.performed += instance.OnMousePosition;
            @MousePosition.canceled += instance.OnMousePosition;
            @CameraDragPress.started += instance.OnCameraDragPress;
            @CameraDragPress.performed += instance.OnCameraDragPress;
            @CameraDragPress.canceled += instance.OnCameraDragPress;
            @CameraDragNotPress.started += instance.OnCameraDragNotPress;
            @CameraDragNotPress.performed += instance.OnCameraDragNotPress;
            @CameraDragNotPress.canceled += instance.OnCameraDragNotPress;
            @CameraPos.started += instance.OnCameraPos;
            @CameraPos.performed += instance.OnCameraPos;
            @CameraPos.canceled += instance.OnCameraPos;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @ShootPress.started -= instance.OnShootPress;
            @ShootPress.performed -= instance.OnShootPress;
            @ShootPress.canceled -= instance.OnShootPress;
            @ShootNotPress.started -= instance.OnShootNotPress;
            @ShootNotPress.performed -= instance.OnShootNotPress;
            @ShootNotPress.canceled -= instance.OnShootNotPress;
            @Interact.started -= instance.OnInteract;
            @Interact.performed -= instance.OnInteract;
            @Interact.canceled -= instance.OnInteract;
            @Dash.started -= instance.OnDash;
            @Dash.performed -= instance.OnDash;
            @Dash.canceled -= instance.OnDash;
            @Slower.started -= instance.OnSlower;
            @Slower.performed -= instance.OnSlower;
            @Slower.canceled -= instance.OnSlower;
            @Laser.started -= instance.OnLaser;
            @Laser.performed -= instance.OnLaser;
            @Laser.canceled -= instance.OnLaser;
            @MousePosition.started -= instance.OnMousePosition;
            @MousePosition.performed -= instance.OnMousePosition;
            @MousePosition.canceled -= instance.OnMousePosition;
            @CameraDragPress.started -= instance.OnCameraDragPress;
            @CameraDragPress.performed -= instance.OnCameraDragPress;
            @CameraDragPress.canceled -= instance.OnCameraDragPress;
            @CameraDragNotPress.started -= instance.OnCameraDragNotPress;
            @CameraDragNotPress.performed -= instance.OnCameraDragNotPress;
            @CameraDragNotPress.canceled -= instance.OnCameraDragNotPress;
            @CameraPos.started -= instance.OnCameraPos;
            @CameraPos.performed -= instance.OnCameraPos;
            @CameraPos.canceled -= instance.OnCameraPos;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    public interface IPlayerActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnShootPress(InputAction.CallbackContext context);
        void OnShootNotPress(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
        void OnSlower(InputAction.CallbackContext context);
        void OnLaser(InputAction.CallbackContext context);
        void OnMousePosition(InputAction.CallbackContext context);
        void OnCameraDragPress(InputAction.CallbackContext context);
        void OnCameraDragNotPress(InputAction.CallbackContext context);
        void OnCameraPos(InputAction.CallbackContext context);
    }
}
